{"ast":null,"code":"var _jsxFileName = \"/Users/kia/Projects/project2/restaurant/restaurant_client/src/components/UserForm.js\";\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { Creatable } from 'react-select';\nimport FormControls from '../controls/FormControls';\nimport MaterialTextField from '../inputs/MaterialTextField';\nexport default UserForm(({\n  form\n}) => React.createElement(\"form\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(\"h2\", {\n  className: \"light-red\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, \"Dynamic Fields Select\"), React.createElement(\"h5\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, \"Select or type new options (then press enter) to add new fields:\"), React.createElement(Creatable, Object.assign({\n  multi: true,\n  allowCreate: true,\n  resetValue: [],\n  options: form.$('fieldFactory').extra,\n  openOnFocus: false,\n  placeholder: \"Type to add fields\",\n  noResultsText: \"Type to add fields\"\n}, form.$('fieldFactory').bind(), {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n})), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}), React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, form.$('dynamicFields').label), React.createElement(\"hr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}), form.$('dynamicFields').map(field => React.createElement(MaterialTextField, {\n  key: field.name,\n  field: field,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n})), React.createElement(FormControls, {\n  form: form,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n})));","map":{"version":3,"sources":["/Users/kia/Projects/project2/restaurant/restaurant_client/src/components/UserForm.js"],"names":["React","observer","Creatable","FormControls","MaterialTextField","UserForm","form","$","extra","bind","label","map","field","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AAEA,eAAeC,QAAQ,CAAE,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAI,EAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAFF,EAIE,oBAAC,SAAD;AACE,EAAA,KAAK,MADP;AAEE,EAAA,WAAW,MAFb;AAGE,EAAA,UAAU,EAAE,EAHd;AAIE,EAAA,OAAO,EAAEA,IAAI,CAACC,CAAL,CAAO,cAAP,EAAuBC,KAJlC;AAKE,EAAA,WAAW,EAAE,KALf;AAME,EAAA,WAAW,EAAC,oBANd;AAOE,EAAA,aAAa,EAAC;AAPhB,GAQMF,IAAI,CAACC,CAAL,CAAO,cAAP,EAAuBE,IAAvB,EARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAJF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAfF,EAeQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAfR,EAec;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKH,IAAI,CAACC,CAAL,CAAO,eAAP,EAAwBG,KAA7B,CAfd,EAesD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAftD,EAiBGJ,IAAI,CAACC,CAAL,CAAO,eAAP,EAAwBI,GAAxB,CAA4BC,KAAK,IAChC,oBAAC,iBAAD;AACE,EAAA,GAAG,EAAEA,KAAK,CAACC,IADb;AAEE,EAAA,KAAK,EAAED,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CAjBH,EAwBE,oBAAC,YAAD;AAAc,EAAA,IAAI,EAAEN,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAxBF,CADqB,CAAvB","sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport { Creatable } from 'react-select';\n\nimport FormControls from '../controls/FormControls';\nimport MaterialTextField from '../inputs/MaterialTextField';\n\nexport default UserForm (({ form }) => (\n  <form>\n    <h2 className=\"light-red\">Dynamic Fields Select</h2>\n    <h5>Select or type new options (then press enter) to add new fields:</h5>\n\n    <Creatable\n      multi\n      allowCreate\n      resetValue={[]}\n      options={form.$('fieldFactory').extra}\n      openOnFocus={false}\n      placeholder=\"Type to add fields\"\n      noResultsText=\"Type to add fields\"\n      {...form.$('fieldFactory').bind()}\n    />\n\n    <br /><br /><h4>{form.$('dynamicFields').label}</h4><hr />\n\n    {form.$('dynamicFields').map(field =>\n      <MaterialTextField\n        key={field.name}\n        field={field}\n      />,\n    )}\n\n    <FormControls form={form} />\n  </form>\n));"]},"metadata":{},"sourceType":"module"}