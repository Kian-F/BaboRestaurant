{"ast":null,"code":"var _jsxFileName = \"/Users/kia/Projects/project2/restaurant/restaurant_client/src/components/Menu.js\";\nimport React, { Component } from 'react';\nimport Cart from './Cart';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nconst SERVER_URL = \"http://localhost:3000/products.json\";\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      categories: [],\n      selected_products: {}\n    };\n    this.addItemToOrder = this.addItemToOrder.bind(this);\n    this._handleChange = this._handleChange.bind(this);\n  } //get all products\n\n\n  fetchProducts() {\n    axios.get(SERVER_URL).then(results => {\n      const allProducts = results.data;\n      this.setState({\n        products: allProducts\n      });\n      const courses = [...new Set(allProducts.map(p => p.category))];\n      this.setState({\n        categories: courses\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchProducts();\n    const orderProducts = JSON.parse(localStorage.getItem('orderItems'));\n\n    if (orderProducts) {\n      console.log(orderProducts);\n      this.setState({\n        selected_products: orderProducts\n      });\n    }\n\n    ;\n  }\n\n  addItemToOrder(p) {\n    const currentCart = this.state.selected_products; //checks if item is already there and changes the quantity\n\n    if (currentCart[p.id]) {\n      currentCart[p.id] += 1;\n    } else {\n      currentCart[p.id] = 1;\n    }\n\n    this.setState({\n      selected_products: currentCart\n    });\n  }\n\n  _handleChange(id) {\n    const currentCart = this.state.selected_products;\n    currentCart[id] -= 1;\n\n    if (currentCart[id] === 0) {\n      delete currentCart[id];\n    }\n\n    this.setState({\n      selected_products: currentCart\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Menu\"), this.state.categories.map(c => {\n      return React.createElement(\"div\", {\n        key: c,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, c), this.state.products.map(p => {\n        return p.category === c && React.createElement(\"div\", {\n          key: p.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, p.name, Array.from(Array(p.stars).keys()).map(s => {\n          return React.createElement(FontAwesomeIcon, {\n            icon: \"star\",\n            size: \"2x\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          });\n        }), \"$\", p.price), React.createElement(\"button\", {\n          type: \"button\",\n          onClick: () => this.addItemToOrder(p),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"+\"));\n      }));\n    })), Object.keys(this.state.selected_products).length > 0 && React.createElement(Cart, {\n      onClick: this._handleChange,\n      cart_products: this.state.selected_products,\n      products: this.state.products,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Menu;","map":{"version":3,"sources":["/Users/kia/Projects/project2/restaurant/restaurant_client/src/components/Menu.js"],"names":["React","Component","Cart","axios","FontAwesomeIcon","SERVER_URL","Menu","constructor","props","state","products","categories","selected_products","addItemToOrder","bind","_handleChange","fetchProducts","get","then","results","allProducts","data","setState","courses","Set","map","p","category","componentDidMount","orderProducts","JSON","parse","localStorage","getItem","console","log","currentCart","id","render","c","name","Array","from","stars","keys","s","price","Object","length"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Cart from './Cart';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\n\nconst SERVER_URL = \"http://localhost:3000/products.json\"\n\nclass Menu extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state ={\n      products: [],\n      categories: [],\n      selected_products: {}\n    }\n    this.addItemToOrder = this.addItemToOrder.bind(this);\n    this._handleChange = this._handleChange.bind(this);\n  }\n\n  //get all products\n  fetchProducts() {\n    axios.get(SERVER_URL).then( (results) => {\n      const allProducts = results.data;\n      this.setState({products: allProducts})\n\n      const courses = [...new Set(allProducts.map(p => p.category))]\n      this.setState({categories: courses});\n\n    })\n  }\n\n  componentDidMount() {\n    this.fetchProducts();\n\n    const orderProducts = JSON.parse(localStorage.getItem('orderItems'));\n    if (orderProducts) {\n      console.log(orderProducts);\n      this.setState({selected_products: orderProducts});\n    };\n  }\n\n  addItemToOrder(p) {\n    const currentCart = this.state.selected_products;\n    //checks if item is already there and changes the quantity\n    if (currentCart[p.id]) {\n      currentCart[p.id] += 1;\n    } else {\n      currentCart[p.id] = 1;\n    }\n    this.setState({selected_products: currentCart});\n  }\n\n  _handleChange(id) {\n    const currentCart = this.state.selected_products;\n    currentCart[id] -= 1;\n    if (currentCart[id] === 0){\n      delete currentCart[id];\n    }\n    this.setState({selected_products: currentCart});\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        <div className=\"menu\">\n          <h1>Menu</h1>\n          {this.state.categories.map( c => {\n            return (\n            <div key={c}>\n              <h3>{c}</h3>\n              {this.state.products.map( p => {\n                  return (p.category === c &&\n                  <div key={p.id}>\n                    <label>\n                      {p.name}\n                      {Array.from(Array(p.stars).keys()).map( s => { return (<FontAwesomeIcon icon='star' size=\"2x\" />)\n                      })}\n                      ${p.price}\n                    </label>\n                    <button type=\"button\" onClick={() => this.addItemToOrder(p)}>\n                    +</button>\n                  </div>);\n              })}\n            </div>);\n          })}\n        </div>\n        {Object.keys(this.state.selected_products).length > 0 &&\n        <Cart onClick={this._handleChange} cart_products={this.state.selected_products} products={this.state.products} />\n        }\n      </div>\n      \n    );\n  }\n \n\n}\n\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}