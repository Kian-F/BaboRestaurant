{"ast":null,"code":"var _jsxFileName = \"/Users/kia/Projects/project2/restaurant/restaurant_client/src/components/OrderSummary.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst SERVER_URL = \"http://localhost:3000/products.json\";\n\nclass OrderSummary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderItems: {},\n      allProducts: [],\n      delivery: '',\n      paymentOption: '',\n      time: '',\n      total: 0\n    };\n  } //get all products (slowest action) and then set variables\n\n\n  fetchProducts(props) {\n    axios.get(SERVER_URL).then(results => {\n      const allProducts = results.data; //Gets shopping cart from local storage\n\n      const orderItems = JSON.parse(localStorage.getItem('orderItems')); //Gets delivery status from local storage\n\n      const delivery = this.props.deliveryStatus ? this.props.deliveryStatus : JSON.parse(localStorage.getItem('delivery')); //Gets payment option from local storage\n\n      const paymentOption = JSON.parse(localStorage.getItem('paymentOption')); //get time for order\n\n      const time = this.props.time ? this.props.time : JSON.parse(localStorage.getItem('time'));\n      const total = this.calculateTotal(allProducts, orderItems, delivery);\n      this.setState({\n        allProducts,\n        orderItems,\n        delivery,\n        paymentOption,\n        time,\n        total\n      });\n    });\n  }\n\n  calculateTotal(allProducts, orderItems) {\n    let totalPrice = 0;\n\n    if (Object.keys(orderItems).length > 0) {\n      Object.entries(orderItems).map(([id, quantity]) => {\n        allProducts.find(p => {\n          if (p.id.toString() === id) {\n            totalPrice += p.price * quantity;\n          }\n\n          ;\n        });\n      });\n    }\n\n    this.setState({\n      total: totalPrice\n    });\n    return totalPrice;\n  }\n\n  componentDidMount() {\n    this.fetchProducts();\n  }\n\n  render(props) {\n    const deliveryCost = \"Delivery fee: $5.00\"; //updates total price according to delivery status\n\n    const total = this.props.deliveryStatus ? this.state.total + 5 : this.state.total;\n    return this.state.allProducts.length > 0 && React.createElement(\"div\", {\n      className: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Order Summary\"), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"For \", this.props.deliveryStatus ? \"delivery\" : \"pick-up\", \" at \", this.props.time, \" pm.\"), Object.entries(this.state.orderItems).map(([id, quantity]) => {\n      const item = this.state.allProducts.find(p => p.id.toString() === id);\n      return React.createElement(\"div\", {\n        className: \"item\",\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"itemName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, item.name), React.createElement(\"label\", {\n        className: \"quantity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"x \", quantity), React.createElement(\"label\", {\n        className: \"itemPrice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"$\", Number(item.price * quantity).toFixed(2)));\n    }), this.props.deliveryStatus ? React.createElement(\"p\", {\n      className: \"totalPrice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, deliveryCost) : \"\", React.createElement(\"p\", {\n      className: \"totalPrice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Total $\", Number(total).toFixed(2)));\n  }\n\n}\n\nexport default OrderSummary;","map":{"version":3,"sources":["/Users/kia/Projects/project2/restaurant/restaurant_client/src/components/OrderSummary.js"],"names":["React","Component","axios","SERVER_URL","OrderSummary","constructor","props","state","orderItems","allProducts","delivery","paymentOption","time","total","fetchProducts","get","then","results","data","JSON","parse","localStorage","getItem","deliveryStatus","calculateTotal","setState","totalPrice","Object","keys","length","entries","map","id","quantity","find","p","toString","price","componentDidMount","render","deliveryCost","item","name","Number","toFixed"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nconst SERVER_URL = \"http://localhost:3000/products.json\"\n\n\nclass OrderSummary extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderItems: {},\n      allProducts: [],\n      delivery: '',\n      paymentOption: '',\n      time: '',\n      total: 0\n    }\n  }\n\n  //get all products (slowest action) and then set variables\n  fetchProducts(props) {\n    axios.get(SERVER_URL).then( (results) => {\n      const allProducts = results.data;\n\n      //Gets shopping cart from local storage\n      const orderItems = JSON.parse(localStorage.getItem('orderItems'));\n      //Gets delivery status from local storage\n      const delivery = this.props.deliveryStatus? this.props.deliveryStatus : JSON.parse(localStorage.getItem('delivery'));\n      //Gets payment option from local storage\n      const paymentOption = JSON.parse(localStorage.getItem('paymentOption'));\n      //get time for order\n      const time = this.props.time? this.props.time : JSON.parse(localStorage.getItem('time'));\n\n      const total = this.calculateTotal(allProducts, orderItems, delivery);\n\n      this.setState({allProducts, orderItems, delivery, paymentOption, time, total});\n    })\n\n  }\n\n  calculateTotal(allProducts, orderItems) {\n    let totalPrice = 0;\n    if (Object.keys(orderItems).length > 0){\n      Object.entries(orderItems).map( ([id, quantity]) => {\n        allProducts.find( p => {\n         if (p.id.toString() === id) {\n           totalPrice += p.price * quantity;\n         };\n       })\n      });\n    }\n    this.setState({total: totalPrice});\n    return totalPrice;\n  }\n\n  componentDidMount() {\n    this.fetchProducts();\n  }\n\n  render(props) {\n    const deliveryCost = \"Delivery fee: $5.00\";\n    //updates total price according to delivery status\n    const total = this.props.deliveryStatus ? (this.state.total + 5) : this.state.total;\n\n    return(this.state.allProducts.length > 0 &&\n      (<div className='orderList'>\n        <h3>Order Summary</h3>\n\n        <h6>For {this.props.deliveryStatus ? \"delivery\" : \"pick-up\"} at {this.props.time} pm.</h6>\n\n        {Object.entries(this.state.orderItems).map( ([id, quantity]) => {\n          const item = this.state.allProducts.find( p => p.id.toString() === id);\n          return (\n            <div className=\"item\" key={id}>\n              <label className=\"itemName\">\n               {item.name}\n              </label>\n              <label className=\"quantity\">\n                x {quantity}\n              </label>\n\n              <label className=\"itemPrice\">\n                ${Number(item.price * quantity).toFixed(2)}\n              </label>\n            </div>\n        )})}\n        {this.props.deliveryStatus ?\n        (<p className=\"totalPrice\">{deliveryCost}</p>)\n        : \"\"}\n        <p className=\"totalPrice\">Total ${Number(total).toFixed(2)}</p>\n\n      </div>)\n    );\n  }\n\n}\n\n\nexport default OrderSummary;\n"]},"metadata":{},"sourceType":"module"}