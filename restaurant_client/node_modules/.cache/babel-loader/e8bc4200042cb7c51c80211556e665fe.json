{"ast":null,"code":"var _jsxFileName = \"/Users/kia/Projects/project2/restaurant/restaurant_client/src/components/Menu.js\";\nimport React, { Component } from 'react';\nimport Cart from './Cart';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nconst SERVER_URL = \"http://localhost:3000/products.json\";\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      categories: [],\n      selected_products: {}\n    };\n    this._handleChange = this._handleChange.bind(this);\n    this.addItemToOrder = this.addItemToOrder.bind(this);\n  } //get all products\n\n\n  fetchProducts() {\n    axios.get(SERVER_URL).then(results => {\n      const allProducts = results.data;\n      this.setState({\n        products: allProducts\n      });\n      const courses = [...new Set(allProducts.map(p => p.category))];\n      this.setState({\n        categories: courses\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchProducts();\n    const orderProducts = JSON.parse(localStorage.getItem('orderItems'));\n\n    if (orderProducts) {\n      this.setState({\n        selected_products: orderProducts\n      });\n    }\n\n    ;\n  }\n\n  addItemToOrder(id) {\n    const orderItems = this.state.selected_products;\n    orderItems[id] = 1;\n    this.setState({\n      selected_products: orderItems\n    });\n  }\n\n  _handleChange(orderItems) {\n    this.setState({\n      selected_products: orderItems\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Menu\"), this.state.categories.map(cat => {\n      return React.createElement(\"div\", {\n        key: cat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, cat), this.state.products.map(prod => {\n        return prod.category === cat && React.createElement(\"div\", {\n          key: prod.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"product-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, prod.name), React.createElement(\"label\", {\n          className: \"product-price\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"$\", Number(prod.price).toFixed(2)), this.state.selected_products[Number(prod.id).toString()] ? React.createElement(\"button\", {\n          type: \"button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Added\") : React.createElement(\"button\", {\n          type: \"button\",\n          onClick: () => this.addItemToOrder(prod.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \"Add\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }), prod.stars > 1 ? Array.from(Array(prod.stars).keys()).map(star => {\n          return React.createElement(FontAwesomeIcon, {\n            key: star,\n            icon: \"star\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          });\n        }) : \"\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }));\n      }));\n    })), React.createElement(Cart, {\n      onClick: this._handleChange,\n      cart_products: this.state.selected_products,\n      products: this.state.products,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Menu;","map":{"version":3,"sources":["/Users/kia/Projects/project2/restaurant/restaurant_client/src/components/Menu.js"],"names":["React","Component","Cart","axios","FontAwesomeIcon","SERVER_URL","Menu","constructor","props","state","products","categories","selected_products","_handleChange","bind","addItemToOrder","fetchProducts","get","then","results","allProducts","data","setState","courses","Set","map","p","category","componentDidMount","orderProducts","JSON","parse","localStorage","getItem","id","orderItems","render","cat","prod","name","Number","price","toFixed","toString","stars","Array","from","keys","star"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Cart from './Cart';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\n\nconst SERVER_URL = \"http://localhost:3000/products.json\"\n\nclass Menu extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state ={\n      products: [],\n      categories: [],\n      selected_products: {}\n    }\n    this._handleChange = this._handleChange.bind(this);\n    this.addItemToOrder = this.addItemToOrder.bind(this);\n  }\n\n  //get all products\n  fetchProducts() {\n    axios.get(SERVER_URL).then( (results) => {\n      const allProducts = results.data;\n      this.setState({products: allProducts})\n\n      const courses = [...new Set(allProducts.map(p => p.category))]\n      this.setState({categories: courses});\n\n    })\n  }\n\n  componentDidMount() {\n    this.fetchProducts();\n\n    const orderProducts = JSON.parse(localStorage.getItem('orderItems'));\n    if (orderProducts) {\n      this.setState({selected_products: orderProducts});\n    };\n\n  }\n\n  addItemToOrder(id) {\n    const orderItems = this.state.selected_products;\n    orderItems[id] = 1;\n    this.setState({selected_products: orderItems})\n  }\n\n  _handleChange(orderItems) {\n    this.setState({selected_products: orderItems});\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        <div className=\"menu\">\n          <h1>Menu</h1>\n          {this.state.categories.map( cat => {\n            return (\n            <div key={cat}>\n              <h3>{cat}</h3>\n              {this.state.products.map( prod => {\n                  return (prod.category === cat &&\n                  <div key={prod.id}>\n                    <label className=\"product-name\">\n                      {prod.name}\n                    </label>\n                    <label className=\"product-price\">\n                      ${Number(prod.price).toFixed(2)}\n                    </label>\n                    {this.state.selected_products[Number(prod.id).toString()] ?\n                      (<button type=\"button\">Added</button>)\n                      :\n                      (<button type=\"button\" onClick={() => this.addItemToOrder(prod.id)}>Add</button>)\n                    }\n                    <br/>\n                    {prod.stars > 1 ? Array.from(Array(prod.stars).keys()).map( star => { return (<FontAwesomeIcon key={star} icon='star' />)\n                    }) : \"\"}\n                    <br/>\n                  </div>);\n              })}\n            </div>);\n          })}\n        </div>\n\n        <Cart onClick={this._handleChange} cart_products={this.state.selected_products} products={this.state.products} />\n      </div>\n\n    );\n  }\n\n\n}\n\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}