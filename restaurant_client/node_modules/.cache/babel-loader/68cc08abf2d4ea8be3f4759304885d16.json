{"ast":null,"code":"var _jsxFileName = \"/Users/kia/Projects/project2/restaurant/restaurant_client/src/components/CheckOut.js\";\nimport React, { Component } from 'react';\nimport PaymentForm from './PaymentForm';\nimport { Link } from 'react-router-dom';\nimport UserForm from './UserForm';\nimport OrderSummary from './OrderSummary';\n\nclass CheckOut extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderItems: {},\n      allProducts: [],\n      delivery: '',\n      paymentOption: \"Cash\",\n      ccName: '',\n      ccNumber: '',\n      ccCVV: '',\n      totalPrice: 0\n    };\n    this._handleClick = this._handleClick.bind(this);\n    this._handleChange = this._handleChange.bind(this);\n    this._handleCardDetails = this._handleCardDetails.bind(this);\n  }\n\n  componentDidMount() {\n    //Gets shopping cart from local storage\n    const orderItems = JSON.parse(localStorage.getItem('orderItems')); //Gets delivery status from local storage\n\n    const delivery = JSON.parse(localStorage.getItem('delivery')); //Gets payment option from local storage\n\n    const paymentOption = JSON.parse(localStorage.getItem('paymentOption')); //sets state of all variables\n\n    this.setState({\n      orderItems,\n      delivery,\n      paymentOption\n    });\n  }\n\n  _handleClick(event) {\n    const value = event.target.value; //get value of button and set state\n\n    if (value === \"Pick-up\") {\n      this.setState({\n        delivery: false\n      });\n    } else if (value === \"Delivery\") {\n      this.setState({\n        delivery: true\n      });\n    } //sets delivery state in local storage\n\n\n    let deliveryStatus = JSON.stringify(this.state.delivery);\n    localStorage.setItem('delivery', deliveryStatus);\n  }\n\n  _handleChange(event) {\n    //sets state of payment type\n    this.setState({\n      paymentOption: event.target.value\n    }); //saves payment type to local storage\n\n    let paymentStatus = JSON.stringify(this.state.paymentOption);\n    localStorage.setItem('paymentOption', paymentStatus);\n  }\n\n  _handleCardDetails(name, number, cvv) {\n    this.setState({\n      ccName: name\n    });\n    this.setState({\n      ccNumber: number\n    });\n    this.setState({\n      ccCVV: cvv\n    });\n    console.log(\"I cna see this\", this.state.ccName);\n    this.createOrder();\n  }\n\n  createOrder() {\n    //make order and each line item\n    console.log(\"will make request\"); // redirect to /ordercomplete if all verified\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"leftside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"kind-order\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Please select:\"), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this._handleClick,\n      value: \"Pick-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Pick-up\"), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this._handleClick,\n      value: \"Delivery\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Delivery\")), React.createElement(UserForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: \"payment-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Payment option:\"), React.createElement(\"div\", {\n      className: \"cash-option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"Cash\",\n      checked: this.state.paymentOption === \"Cash\",\n      onChange: this._handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), \"Cash\")), React.createElement(\"div\", {\n      className: \"card-option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"Card\",\n      checked: this.state.paymentOption === \"Card\",\n      onChange: this._handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), \"Card\"))), this.state.paymentOption === \"Card\" ? React.createElement(PaymentForm, {\n      onClick: this._handleCardDetails,\n      orderItems: this.state.orderItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }) : React.createElement(\"button\", {\n      onClick: this.createOrder,\n      className: \"pay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Pay\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(OrderSummary, {\n      deliveryStatus: this.state.delivery,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default CheckOut;","map":{"version":3,"sources":["/Users/kia/Projects/project2/restaurant/restaurant_client/src/components/CheckOut.js"],"names":["React","Component","PaymentForm","Link","UserForm","OrderSummary","CheckOut","constructor","props","state","orderItems","allProducts","delivery","paymentOption","ccName","ccNumber","ccCVV","totalPrice","_handleClick","bind","_handleChange","_handleCardDetails","componentDidMount","JSON","parse","localStorage","getItem","setState","event","value","target","deliveryStatus","stringify","setItem","paymentStatus","name","number","cvv","console","log","createOrder","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PaymentForm from './PaymentForm';\nimport {Link} from 'react-router-dom';\nimport UserForm from './UserForm';\nimport OrderSummary from './OrderSummary';\n\nclass CheckOut extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderItems: {},\n      allProducts: [],\n      delivery: '',\n      paymentOption: \"Cash\",\n      ccName: '',\n      ccNumber: '',\n      ccCVV: '',\n      totalPrice: 0\n    }\n    this._handleClick = this._handleClick.bind(this);\n    this._handleChange = this._handleChange.bind(this);\n    this._handleCardDetails = this._handleCardDetails.bind(this);\n  }\n\n  componentDidMount() {\n\n    //Gets shopping cart from local storage\n    const orderItems = JSON.parse(localStorage.getItem('orderItems'));\n    //Gets delivery status from local storage\n    const delivery = JSON.parse(localStorage.getItem('delivery'));\n    //Gets payment option from local storage\n    const paymentOption = JSON.parse(localStorage.getItem('paymentOption'));\n    //sets state of all variables\n    this.setState({ orderItems, delivery, paymentOption });\n  }\n\n  _handleClick(event) {\n    const value = event.target.value\n    //get value of button and set state\n    if (value === \"Pick-up\"){\n      this.setState({delivery: false});\n    } else if (value === \"Delivery\" ){\n      this.setState({delivery: true});\n    }\n    //sets delivery state in local storage\n    let deliveryStatus = JSON.stringify(this.state.delivery);\n    localStorage.setItem('delivery', deliveryStatus);\n  }\n\n  _handleChange(event) {\n    //sets state of payment type\n    this.setState({paymentOption: event.target.value})\n    //saves payment type to local storage\n    let paymentStatus = JSON.stringify(this.state.paymentOption);\n    localStorage.setItem('paymentOption', paymentStatus);\n  }\n\n  _handleCardDetails(name, number, cvv) {\n    this.setState({ccName: name});\n    this.setState({ccNumber: number});\n    this.setState({ccCVV: cvv});\n    console.log(\"I cna see this\", this.state.ccName);\n    this.createOrder();\n  }\n\n  createOrder() {\n    //make order and each line item\n    console.log(\"will make request\");\n    // redirect to /ordercomplete if all verified\n\n  }\n\n\n  render() {\n\n    return (\n      <div className=\"main\">\n\n        <div className=\"leftside\">\n\n          <div className=\"kind-order\">\n            <h3>Please select:</h3>\n            <button type='button' onClick={this._handleClick} value=\"Pick-up\">\n            Pick-up\n            </button>\n            <button type='button' onClick={this._handleClick} value=\"Delivery\">\n            Delivery\n            </button>\n          </div>\n\n          <UserForm />\n\n          <form className=\"payment-form\">\n            <h3>Payment option:</h3>\n            <div className=\"cash-option\">\n              <label>\n                <input type=\"radio\" value=\"Cash\" checked={this.state.paymentOption === \"Cash\"} onChange={this._handleChange}/>\n                Cash\n              </label>\n            </div>\n            <div className=\"card-option\">\n              <label>\n                <input type=\"radio\" value=\"Card\" checked={this.state.paymentOption === \"Card\"} onChange={this._handleChange}/>\n                Card\n              </label>\n            </div>\n          </form>\n\n          {this.state.paymentOption === \"Card\" ? <PaymentForm onClick={this._handleCardDetails} orderItems={this.state.orderItems} /> : <button onClick={this.createOrder} className=\"pay\">Pay</button>}\n\n        </div>\n\n\n        <div>\n          <OrderSummary deliveryStatus={this.state.delivery} />\n        </div>\n\n      </div>\n\n\n    );\n  }\n}\n\n\nexport default CheckOut;\n"]},"metadata":{},"sourceType":"module"}