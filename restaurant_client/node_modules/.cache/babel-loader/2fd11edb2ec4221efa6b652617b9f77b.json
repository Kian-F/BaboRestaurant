{"ast":null,"code":"var _jsxFileName = \"/Users/kia/Projects/project2/restaurant/restaurant_client/src/components/OrderSummary.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst SERVER_URL = \"http://localhost:3000/products.json\";\n\nclass OrderSummary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderItems: {},\n      allProducts: [],\n      delivery: '',\n      paymentOption: ''\n    };\n  } //get all products\n\n\n  fetchProducts() {\n    axios.get(SERVER_URL).then(results => {\n      const products = results.data;\n      this.setState({\n        allProducts: products\n      });\n    });\n  }\n\n  componentDidMount() {\n    //Gets shopping cart from local storage\n    const orderItems = JSON.parse(localStorage.getItem('orderItems')); //Gets delivery status from local storage\n\n    const delivery = JSON.parse(localStorage.getItem('delivery')); //Gets payment option from local storage\n\n    const paymentOption = JSON.parse(localStorage.getItem('paymentOption')); //sets state of all variables\n\n    this.setState({\n      orderItems,\n      delivery,\n      paymentOption\n    });\n    this.fetchProducts();\n  }\n\n  render() {\n    const props = this.props;\n    let total = 0;\n    let deliveryCost; //updates total price according to delivery status\n\n    if (props.deliveryStatus) {\n      total += 5;\n      deliveryCost = \"Delivery fee: $5.00\";\n    }\n\n    return this.state.allProducts.length > 0 && React.createElement(\"div\", {\n      className: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Order Summary\"), Object.entries(this.state.orderItems).map(([id, quantity]) => {\n      const item = this.state.allProducts.find(p => p.id.toString() === id);\n      total += quantity * item.price;\n      return React.createElement(\"div\", {\n        className: \"item\",\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"itemName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, item.name), React.createElement(\"label\", {\n        className: \"quantity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"x \", quantity), React.createElement(\"label\", {\n        className: \"itemPrice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"$\", Number(item.price * quantity).toFixed(2)));\n    }), props.deliveryStatus ? React.createElement(\"p\", {\n      className: \"totalPrice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, deliveryCost) : \"\", React.createElement(\"p\", {\n      className: \"totalPrice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Total $\", Number(total).toFixed(2)));\n  }\n\n}\n\nexport default OrderSummary;","map":{"version":3,"sources":["/Users/kia/Projects/project2/restaurant/restaurant_client/src/components/OrderSummary.js"],"names":["React","Component","axios","SERVER_URL","OrderSummary","constructor","props","state","orderItems","allProducts","delivery","paymentOption","fetchProducts","get","then","results","products","data","setState","componentDidMount","JSON","parse","localStorage","getItem","render","total","deliveryCost","deliveryStatus","length","Object","entries","map","id","quantity","item","find","p","toString","price","name","Number","toFixed"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nconst SERVER_URL = \"http://localhost:3000/products.json\"\n\n\nclass OrderSummary extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderItems: {},\n      allProducts: [],\n      delivery: '',\n      paymentOption: ''\n    }\n  }\n\n  //get all products\n  fetchProducts() {\n    axios.get(SERVER_URL).then( (results) => {\n      const products = results.data;\n      this.setState({allProducts: products});\n    })\n  }\n\n  componentDidMount() {\n\n    //Gets shopping cart from local storage\n    const orderItems = JSON.parse(localStorage.getItem('orderItems'));\n    //Gets delivery status from local storage\n    const delivery = JSON.parse(localStorage.getItem('delivery'));\n    //Gets payment option from local storage\n    const paymentOption = JSON.parse(localStorage.getItem('paymentOption'));\n    //sets state of all variables\n    this.setState({ orderItems, delivery, paymentOption });\n\n    this.fetchProducts();\n  }\n\n\n\n  render() {\n    const props = this.props;\n\n    let total = 0;\n    let deliveryCost;\n    //updates total price according to delivery status\n    if (props.deliveryStatus) {\n      total += 5;\n      deliveryCost = \"Delivery fee: $5.00\";\n    }\n\n    return(this.state.allProducts.length > 0 &&\n      (<div className='orderList'>\n        <h3>Order Summary</h3>\n\n        {Object.entries(this.state.orderItems).map( ([id, quantity]) => {\n          const item = this.state.allProducts.find( p => p.id.toString() === id);\n          total += quantity * item.price;\n          return (\n            <div className=\"item\" key={id}>\n              <label className=\"itemName\">\n               {item.name}\n              </label>\n              <label className=\"quantity\">\n                x {quantity}\n              </label>\n\n              <label className=\"itemPrice\">\n                ${Number(item.price * quantity).toFixed(2)}\n              </label>\n            </div>\n        )})}\n        {props.deliveryStatus ?\n        (<p className=\"totalPrice\">{deliveryCost}</p>)\n        : \"\"}\n        <p className=\"totalPrice\">Total ${Number(total).toFixed(2)}</p>\n\n      </div>)\n    );\n  }\n\n}\n\n\nexport default OrderSummary;\n"]},"metadata":{},"sourceType":"module"}